#####################
<assertion>
#####################
# assert a piece of information #
#####################

_Holds(fact)

#####################
<property>
#####################
# specify the property of an entity (not an assertion) before asserting a fact #
#####################

having_quantity(entity,{Integer},operator:{equal,stricly_superior_to,superior_to,stricly_inferior_to,inferior_to})

having_property(entity,property:{big,small,strong,weak},degree:{normal,a_bit/little,much/very})

having_comparative_property(entity,compared_to:entity,property:{big,small,strong,weak})

having_superlative_property(entity,property:{big,small,strong,weak})

having_color(entity,color:{white,orange,yellow,red,pink,gray,purple,blue,brown,green,black})

############################
<entities_relation>
############################
# allow to create complex entities by using other entities as reference #
############################

is_above(above:entity|place,reference:entity|place)

is_under(beneath:entity|place,reference:entity|place)

is_in_front_of(front:entity|place,reference:entity|place)

is_behind(behind:entity|place,reference:entity|place)

is_near(next:entity|place,to:entity|place)

is_far_from(far:entity|place,from:entity|place)

is_inside(inside:entity|place,reference:entity|place)

is_outside(outside:entity|place,reference:entity|place)

is_between(between:entity,reference1:entity,reference2:entity)

is_combined_with(combined:entity,with:entity)

################
<fact_general>
################
# predicates that can be used with any fact #
################

at_time(fact,{day,night}|{Date},operator:{equal,since,until})

in_place(fact,place|block|structure,operator:{equal,above,under,in_front_of,behind,near,far_from,inside,outside})

in_version(fact,version,operator:{equal,since,until})

in_mode(fact,game_mode)

if_presence_of(fact,entity)

certainty(fact,{always,generaly,often,possibly,sometimes,rarely,never})

################
<fact_event_relation>
################
# predicates of fact that link events #
#####################

_effect(has_effect,trigger:event,triggered:event)

_trigger(has_trigger,trigger:entity,triggered:event)

_condition(has_condition,event:event,condition:event)

################
<fact_specific>
################
# predicates specific to some facts #
#####################

_exist(exist,entity)

_has_value(has_value,entity,value:{Float},unit:gameplay_quantity,operator:{equal,stricly_superior_to,superior_to,stricly_inferior_to,inferior_to})

_type_of(type_of,element:minecraft_entity,category:minecraft_entity)

_active(be_active,entity)

_composed(be_composed,entity|place)
_component(be_composed,entity|place)

_container(contain,entity|place)
_content(contain,entity|place)

################
<fact_event_properties>
################
# predicates for fact about event properties #
#####################

_has_property(event_property,event,property:{possible,impossible,frequent,rare,good,bad,fast,slow,simple,difficult,far,close,invariant})
degree(event_property,{a_bit/little,much/very})

_has_property(events_comparative_property,event,compared_to:event,property:{possible,impossible,frequent,rare,good,bad,fast,slow,simple,difficult,far,close})

_has_property(event_superlative_property,event,property:{possible,impossible,frequent,rare,good,bad,fast,slow,simple,difficult,far,close})

################
<fact_entity_properties>
################
# predicates for fact about entities properties #
#####################

_has_property(entity_property,entity,property:{big,small,strong,weak,rare,frequent})
degree(entity_property,{a_bit/little,much/very})

_has_property(entities_comparative_property,entity,compared_to:entity,property:{big,small,strong,weak,rare,frequent})

_has_property(entity_superlative_property,entity,property:{big,small,strong,weak,rare,frequent})

_has_color(entity_color,entity,color:{white,orange,yellow,red,pink,gray,purple,blue,brown,green,black})

#################
<event_general>
#################
# predicates that can be used with any event #
################

at_time(event,{day,night}|{Date},operator:{equal,since,until})

in_place(event,place|block|structure,operator:{equal,above,under,in_front_of,behind,near,far_from,inside,outside})

in_version(event,version,operator:{equal,since,until})

in_mode(event,game_mode)

if_presence_of(event,entity)

dont_occur(event)

#################
<event_specific>
#################
# predicates specific to some events #
#####################

_changed(change_value,entity)
increase(change_value,{Float},unit:gameplay_quantity)
decrease(change_value,{Float},unit:gameplay_quantity)
new_value(change_value,{Float},unit:gameplay_quantity)

_change_to(become,old:minecraft_entity,new:minecraft_entity)

miner(mine,mob)
_mined(mine,block|structure)
instrument(mine,tool|weapon)

_crafted(craft,block|item)
craft_ingredient(craft,block|item)

user(use,mob)
_used(use,block|item)
target(use,entity)

_spawned(spawn,entity)

_encountered(encounter,entity)

killer(kill,mob)
_killed(kill,mob)
kill_instrument(kill,tool|weapon)

_move_to(move,moving:entity,destination:entity|place|{up,down,forward,backward,away,random/not_specified})

mover(make_move,entity)
_moved(make_move,entity)
destination(make_move,entity|place|{up,down,forward,backward,away,random/not_specified})

_face(face,facing:entity,target:entity)

_obtained(get,block|item)

_ingredient(mix,block|item)

_collider(collide,entity)

fighter(fight,mob)
_target(fight,mob)
weapon(fight,tool|weapon)

_placed(place,block)

_despawned(despawn,entity)

dropper(drop,entity)
_dropped(drop,entity|{nothing})

_ridden(ride,mob)